/*
 * Copyright 2019 Frollo
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package us.frollo.frollosdk.model.coredata.kyc

import com.google.gson.annotations.SerializedName

/** Data representation of an Identity Document */
data class IdentityDocument(

    /** Unique ID of the document. Generated by backend. */
    @SerializedName("document_id") val documentId: String? = null,

    /** Country of the document */
    @SerializedName("country") var country: String? = null,

    /** The expiry date of the document (if known) in yyyy-MM-dd format */
    @SerializedName("id_expiry") var idExpiry: String? = null, // yyyy-MM-dd

    /** The ID number of the document */
    @SerializedName("id_number") var idNumber: String,

    /** The sub-type of identity document. Very document specific. */
    @SerializedName("id_sub_type") var idSubType: String? = null,

    /** The type of identity document. */
    @SerializedName("id_type") var idType: IdentityDocumentType,

    /** Regional variant of the ID (e.g. VIC drivers licence). */
    @SerializedName("region") var region: String? = null,

    /** List of extra data for the document */
    @SerializedName("extra_data") var extraData: MutableList<IdentityExtraData>? = null,

    /** The issued date of the document (if known) in yyyy-MM-dd format */
    @SerializedName("id_issued") var idIssued: String? = null
) {
    companion object {
        /** Date format for date associated with IdentityDocument */
        const val DATE_FORMAT_PATTERN = "yyyy-MM-dd"
    }
}
