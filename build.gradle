apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka'
apply from: "ktlint.gradle"

configurations.all{
    resolutionStrategy {
        force "com.squareup.okhttp3:okhttp:4.10.0"
    }
}

android {
    compileSdkVersion 33
    defaultConfig {
        minSdkVersion 26 // Android 8.0 (Oreo)
        targetSdkVersion 33
        versionCode 1
        versionName "3.20.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = ['appAuthRedirectScheme': 'frollo-sdk-test']
        buildConfigField "String", "SDK_VERSION_NAME", "\"$versionName\""
        buildConfigField "int", "SDK_VERSION_CODE", "$versionCode"
    }

    buildTypes {
        // TODO: Configure proguard - debugging crash logs might be a problem due to obfuscation
        // TODO: Make sure to test release version after obfuscation, especially serializable classes
        release {
            debuggable false
            //minifyEnabled true
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //consumerProguardFiles 'lib-proguard-rules.txt'
        }
        debug {
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'

        String sharedTestDir = 'src/sharedTest/kotlin'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }
    kapt {
        arguments {
            // Print schemas for each version of room database
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }

    dokkaHtml {
        dokkaSourceSets {
            named("main") {
                reportUndocumented.set(true)
                includeNonPublic.set(false)
                skipDeprecated.set(false)
                skipEmptyPackages.set(true)

                // TODO: Commented this for now as we are not able to add project description markup files
                // includes.from("overview.md", "changelog.md", "README.md", "extras.md","packages.md")
                includes.from("packages.md")

                perPackageOption {
                    matchingRegex.set("us.frollo.frollosdk.database")
                    suppress.set(true)
                }
                perPackageOption {
                    matchingRegex.set("us.frollo.frollosdk.keystore")
                    suppress.set(true)
                }
                perPackageOption {
                    matchingRegex.set("us.frollo.frollosdk.network")
                    suppress.set(true)
                }
                perPackageOption {
                    matchingRegex.set("us.frollo.frollosdk.preferences")
                    suppress.set(true)
                }
                perPackageOption {
                    matchingRegex.set("us.frollo.frollosdk.FrolloSDKInitProvider")
                    suppress.set(true)
                }
            }
        }
    }
    lint {
        checkReleaseBuilds false
    }
}

buildscript {

    ext.kotlin_version_internal = '1.7.10'

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version_internal"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.7.20"
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version_internal"

    // Testing
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:4.8.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.10.0"
    androidTestImplementation "androidx.test:runner:1.5.0"
    androidTestImplementation "androidx.test:rules:1.4.0"
    androidTestImplementation "androidx.test:core:1.4.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "org.mockito:mockito-android:4.8.1"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.10.0"
    androidTestImplementation "com.squareup.retrofit2:retrofit-mock:2.9.0"
    androidTestImplementation 'com.jraska.livedata:testing-ktx:1.2.0'
    androidTestImplementation 'com.jraska.livedata:testing:1.2.0'

    // Android KTX
    implementation "androidx.core:core-ktx:1.9.0"

    // Android Arch Components
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"
    implementation "androidx.room:room-runtime:2.4.3"
    implementation 'androidx.room:room-rxjava2:2.4.3'
    kapt "androidx.room:room-compiler:2.4.3"

    // AndroidX
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    // ThreeTenABP - Date-Time
    implementation "com.jakewharton.threetenabp:threetenabp:1.4.3"

    // Cryptography - SpongyCastle
    implementation "com.madgag.spongycastle:core:1.58.0.0"
    implementation "com.madgag.spongycastle:prov:1.58.0.0"
    implementation "com.madgag.spongycastle:bcpkix-jdk15on:1.58.0.0"
    implementation "com.madgag.spongycastle:bcpg-jdk15on:1.58.0.0"

    // AppAuth
    implementation "net.openid:appauth:0.11.1"

    // SQL Cipher - Database Encryption
    implementation "net.zetetic:android-database-sqlcipher:4.5.2"
    implementation "androidx.sqlite:sqlite-ktx:2.2.0"

    // Version Compare
    implementation("io.github.g00fy2:versioncompare:1.5.0")
}
